{"version":3,"sources":["components/navbarChilds/SelectType.js","components/navbarChilds/InputType.js","components/navbarChilds/Pagination.js","components/NavBar.js","components/pokemonFolder/PokemonCard.js","components/pokemonFolder/PokemonList.js","components/Transfer.js","components/pokemonFolder/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["SelectType","props","handleGetType","e","setState","type","target","value","setType","state","types","getType","bind","this","axios","get","endPointTypes","allEndpointTypes","name","url","concat","data","results","map","result","className","onChange","t","key","Component","InputType","onKeyUp","setInput","placeholder","Pagination","handleGeTNumberValue","limit","setLimit","offset","handlePrevPage","handleNextPage","totalOffset","setOffset","class","onClick","disabled","Math","ceil","countPage","Logo","styled","img","NavBar","refs","pagination","getLimit","selectType","getOffset","Navbar","fixed","bg","expand","Brand","href","src","alt","Toggle","aria-controls","Collapse","id","Nav","Link","style","color","ref","display","pokemons","StyledLink","Thumbnail","PokemonCard","pokemonIndex","imageUrl","split","length","to","PokemonList","cachePokemons","previous","next","passUrl","triggerGetPokemonsBy","res","pokemon","p","slice","letterInput","filter","includes","console","log","Transfer","pokemonList","triggerGetPokemonName","Image","CardMain","Card","Pokemon","frontImageUrl","backImageUrl","height","weight","abilities","stats","hp","attack","defense","speed","specialAttack","specialDefense","match","params","pokemonType","pokemonSpeciesType","pokemonAbility","pokemonRes","sprites","front_default","back_default","stat","ability","then","description","flavor_text_entries","some","flavor","language","flavor_text","femaleRate","genderRatioFemale","genderRatioMale","baseHappiness","base_happiness","chatchRate","round","eggGroups","group","effect","effect_entries","eff","Accordion","as","Header","eventKey","Body","App","getAllpokemonsForType","navBar","dashboard","triggerChangePokemonsInChild","triggerChoseName","count","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec2ba2b7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass SelectType extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      types: [],\n      type: \"all\",\n    };\n    this.getType = this.getType.bind(this);\n  }\n\n  getType() {\n    return this.state.type;\n  }\n\n  async componentDidMount() {\n    const type = \"https://pokeapi.co/api/v2/type/\";\n\n    const endPointTypes = await axios.get(type);\n    const allEndpointTypes = [\n      {\n        name: \"all\",\n        url: \"all\",\n      },\n    ]\n      .concat(endPointTypes.data.results)\n      .map((result) => ({\n        name: result.name,\n        type: result.url,\n      }));\n\n    this.setState({\n      types: allEndpointTypes,\n      type: \"all\",\n    });\n  }\n\n  handleGetType = (e) => {\n    this.setState({\n      type: e.target.value,\n    });\n    this.props.setType(e.target.value);\n  };\n\n  render() {\n    return (\n      <>\n        <select\n          className=\"custom-select\"\n          onChange={(e) => this.handleGetType(e)}\n          value={this.state.type}\n        >\n          {this.state.types.map((t) => (\n            <option key={t.name} value={t.type}>\n              {t.name}\n            </option>\n          ))}\n        </select>\n      </>\n    );\n  }\n}\n\nexport default SelectType;\n","import React, { Component } from \"react\";\n\nclass InputType extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  onKeyUp = (e) => {\n    this.props.setInput(e.target.value);\n  };\n\n  render() {\n    return (\n      <input\n        onKeyUp={(e) => this.onKeyUp(e)}\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"name of pokemon\"\n      />\n    );\n  }\n}\n\nexport default InputType;\n","import React, { Component } from \"react\";\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      limit: 10,\n      offset: 0,\n    };\n    this.handlePrevPage = this.handlePrevPage.bind(this);\n    this.handleNextPage = this.handleNextPage.bind(this);\n  }\n\n  handleGeTNumberValue = (e) => {\n    this.setState({\n      limit: +e.target.value,\n    });\n    this.props.setLimit(+e.target.value);\n  };\n\n  getLimit() {\n    return this.state.limit;\n  }\n\n  handlePrevPage() {\n    let totalOffset = this.state.offset - this.state.limit;\n    this.setState({\n      offset: totalOffset,\n    });\n    this.props.setOffset(totalOffset);\n  }\n\n  handleNextPage() {\n    let totalOffset = this.state.offset + this.state.limit;\n    this.setState({\n      offset: totalOffset,\n    });\n    this.props.setOffset(totalOffset);\n  }\n\n  getOffset() {\n    return this.state.offset;\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.offset > 0 ? (\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.handlePrevPage}\n          >\n            prev\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.handlePrevPage}\n            disabled\n          >\n            prev\n          </button>\n        )}\n        <select\n          onChange={(e) => this.handleGeTNumberValue(e)}\n          value={this.state.limit}\n        >\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n          <option value=\"30\">30</option>\n          <option value=\"40\">40</option>\n        </select>\n\n        {(this.state.offset + this.state.limit) / this.state.limit <\n        Math.ceil(this.props.countPage / this.state.limit) ? (\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.handleNextPage}\n          >\n            next\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            class=\"btn btn-info\"\n            onClick={this.handleNextPage}\n            disabled\n          >\n            next\n          </button>\n        )}\n      </>\n    );\n  }\n}\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport SelectType from \"./navbarChilds/SelectType\";\nimport InputType from \"./navbarChilds/InputType\";\nimport Pagination from \"./navbarChilds/Pagination\";\nimport { Navbar, Nav } from \"react-bootstrap/\";\nimport styled from \"styled-components\";\n\nconst Logo = styled.img`\n  width: 200px;\n`;\n\nclass NavBar extends Component {\n  getLimit() {\n    return this.refs.pagination.getLimit();\n  }\n\n  getType() {\n    return this.refs.selectType.getType();\n  }\n\n  getOffset() {\n    return this.refs.pagination.getOffset();\n  }\n\n  render() {\n    return (\n      <Navbar fixed=\"top\" bg=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <Logo src={\"img/pokedex.png\"} alt=\"\" />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link style={{ color: \"#ffffff\" }}>\n              <p>Select type:</p>\n            </Nav.Link>\n            <Nav.Link>\n              <SelectType setType={this.props.setType} ref=\"selectType\" />\n            </Nav.Link>\n            <Nav.Link>\n              <InputType setInput={this.props.setInput} />\n            </Nav.Link>\n            <Nav.Link style={{ display: \"inherit\" }}>\n              <Pagination\n                setLimit={this.props.setLimit}\n                ref=\"pagination\"\n                setOffset={this.props.setOffset}\n                countPage={this.props.countPage}\n                pokemons={this.props.pokemons}\n              />\n            </Nav.Link>\n            <Nav.Link>\n              <small>Total Pokemons: {this.props.countPage}</small>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  color: black;\n  &:hover {\n    text-decoration: none;\n  }\n  .card {\n    border: 4px solid red;\n  }\n  .card-header {\n    background-color: #ffcccb;\n  }\n  .name {\n    text-transform: uppercase;\n  }\n`;\n\nconst Thumbnail = styled.img`\n  width: 80px;\n  height: 80px;\n  transition: transform 0.6s;\n  &:hover {\n    transform: scale(1.4);\n  }\n`;\n\nclass PokemonCard extends Component {\n  state = {\n    name: \"\",\n    pokemonIndex: \"\",\n    imageUrl: \"\",\n  };\n\n  componentDidMount() {\n    const { name, type } = this.props;\n    const pokemonIndex = type.split(\"/\")[type.split(\"/\").length - 2];\n    // console.log(pokemonIndex);\n    const imageUrl = `http://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonIndex}.png`;\n    this.setState({\n      name: name,\n      imageUrl: imageUrl,\n      pokemonIndex: pokemonIndex,\n    });\n  }\n\n  render() {\n    const { name, pokemonIndex, imageUrl } = this.state;\n\n    return (\n      <div className=\"col-md-3 col-sm-6 mb-5\">\n        <StyledLink to={`pokemon/${pokemonIndex}`}>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h5>{pokemonIndex}</h5>\n            </div>\n            <Thumbnail\n              className=\"card-img-top rounded mx-auto mt-2\"\n              src={imageUrl}\n            />\n            <div className=\"card-body mx-auto\">\n              <h6 className=\"name\">{name}</h6>\n            </div>\n          </div>\n        </StyledLink>\n      </div>\n    );\n  }\n}\n\nexport default PokemonCard;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PokemonCard from \"./PokemonCard\";\n\nclass PokemonList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cachePokemons: [],\n      pokemons: [],\n      previous: null,\n      next: null,\n      passUrl: \"\",\n    };\n    this.triggerGetPokemonsBy = this.triggerGetPokemonsBy.bind(this);\n  }\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://pokeapi.co/api/v2/pokemon/?limit=10\");\n    let pokemons = res.data.results.map((result) => ({\n      name: result.name,\n      type: result.url,\n    }));\n    this.setState({\n      cachePokemons: pokemons,\n      pokemons: pokemons,\n      previous: res.data.previous,\n      next: res.data.next,\n    });\n  }\n\n  async triggerGetPokemonsBy(type, offset, limit) {\n    let cachePokemons = null;\n    let pokemons = null;\n    if (type === \"all\") {\n      const res = await axios.get(\n        `https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`\n      );\n\n      pokemons = res.data.results.map((result) => ({\n        name: result.name,\n        type: result.url,\n      }));\n\n      cachePokemons = pokemons;\n    } else {\n      const res = await axios.get(type);\n      pokemons = res.data.pokemon\n        .map((p) => p.pokemon)\n        .slice(offset, limit + offset)\n        .map((result) => ({\n          name: result.name,\n          type: result.url,\n        }));\n\n      cachePokemons = pokemons;\n    }\n    this.setState({\n      cachePokemons: cachePokemons,\n      pokemons: pokemons,\n    });\n  }\n\n  triggerGetPokemonName(letterInput) {\n    let pokemons = this.state.cachePokemons.filter((pokemon) =>\n      pokemon.name.includes(letterInput)\n    );\n\n    this.setState({\n      pokemons: pokemons.length === 0 ? this.state.cachePokemons : pokemons,\n    });\n  }\n\n  async getLimit(limit) {\n    console.log(limit);\n\n    const res = await axios.get(\n      `https://pokeapi.co/api/v2/pokemon/?limit=${limit}`\n    );\n\n    let pokemons = res.data.results.map((result) => ({\n      name: result.name,\n      type: result.url,\n    }));\n\n    this.setState({\n      pokemons: pokemons,\n    });\n  }\n\n  render() {\n    const { pokemons } = this.state;\n\n    return (\n      <>\n        {pokemons ? (\n          <div className=\"row\">\n            {pokemons.map((pokemon) => (\n              <PokemonCard\n                key={pokemon.name}\n                name={pokemon.name}\n                type={pokemon.type}\n              />\n            ))}\n          </div>\n        ) : (\n          <h1>Loading Pokemon</h1>\n        )}\n      </>\n    );\n  }\n}\n\nexport default PokemonList;\n","import React, { Component } from \"react\";\nimport PokemonList from \"./pokemonFolder/PokemonList\";\n\nclass Transfer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  triggerChangePokemonsInChild(type, offset, limit) {\n    this.refs.pokemonList.triggerGetPokemonsBy(type, offset, limit);\n  }\n\n  triggerChoseName(letterInput) {\n    this.refs.pokemonList.triggerGetPokemonName(letterInput);\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <PokemonList ref=\"pokemonList\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Transfer;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst Image = styled.img`\n  width: 250px;\n  height: 250px;\n`;\n\nconst CardMain = styled(Card)`\n  background-color: #ffcccb;\n  cursor: pointer;\n\n  h5 {\n    font-weight: bold;\n  }\n`;\n\nclass Pokemon extends Component {\n  state = {\n    name: \"\",\n    pokemonIndex: \"\",\n    frontImageUrl: \"\",\n    backImageUrl: \"\",\n    height: \"\",\n    weight: \"\",\n    types: \"\",\n    url: \"\",\n    abilities: \"\",\n\n    stats: {\n      hp: \"\",\n      attack: \"\",\n      defense: \"\",\n      speed: \"\",\n      specialAttack: \"\",\n      specialDefense: \"\",\n    },\n  };\n\n  async componentDidMount() {\n    const { pokemonIndex } = this.props.match.params;\n\n    const pokemonType = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n    const pokemonSpeciesType = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\n    const pokemonAbility = `https://pokeapi.co/api/v2/ability/${pokemonIndex}/`;\n\n    const pokemonRes = await axios.get(pokemonType);\n\n    const name = pokemonRes.data.name;\n    const frontImageUrl = pokemonRes.data.sprites.front_default;\n    const backImageUrl = pokemonRes.data.sprites.back_default;\n    const url = pokemonRes.data.types\n      .map((t) => t.type.url)\n      .map((url) => url + \" \");\n\n    const types = pokemonRes.data.types\n      .map((t) => t.type.name)\n      .map((name) => name + \", \");\n\n    const height = pokemonRes.data.height;\n    const weight = pokemonRes.data.weight;\n\n    let { hp, attack, defense, speed, specialAttack, specialDefense } = \"\";\n\n    pokemonRes.data.stats.map((stat) => {\n      switch (stat.stat.name) {\n        case \"hp\":\n          hp = stat[\"base_stat\"];\n          break;\n        case \"attack\":\n          attack = stat[\"base_stat\"];\n          break;\n        case \"defense\":\n          defense = stat[\"base_stat\"];\n          break;\n        case \"speed\":\n          speed = stat[\"base_stat\"];\n          break;\n        case \"special-attack\":\n          specialAttack = stat[\"base_stat\"];\n          break;\n        case \"special-defense\":\n          specialDefense = stat[\"base_stat\"];\n          break;\n        default:\n          return \"Something goes wrong\";\n      }\n    });\n\n    const abilities = pokemonRes.data.abilities\n      .map((ability) => ability.ability.name)\n      .map((name) => name + \", \");\n\n    await axios.get(pokemonSpeciesType).then((res) => {\n      let description = \"\";\n      res.data.flavor_text_entries.some((flavor) => {\n        if (flavor.language.name === \"en\") {\n          description = flavor.flavor_text;\n        }\n      });\n\n      const femaleRate = res.data[\"gender_rate\"];\n      const genderRatioFemale = 12.5 * femaleRate;\n      const genderRatioMale = 12.5 * (8 - femaleRate);\n\n      const baseHappiness = res.data.base_happiness;\n      const chatchRate = Math.round((100 / 255) * res.data[\"capture_rate\"]);\n\n      const eggGroups = res.data[\"egg_groups\"].map((group) => group.name);\n\n      this.setState({\n        description,\n        genderRatioFemale,\n        genderRatioMale,\n        baseHappiness,\n        chatchRate,\n        eggGroups,\n      });\n    });\n\n    await axios.get(pokemonAbility).then((res) => {\n      let effect = \"\";\n      res.data.effect_entries.some((eff) => {\n        if (eff.language.name === \"en\") {\n          effect = eff.effect;\n        }\n      });\n\n      this.setState({\n        effect,\n      });\n    });\n\n    this.setState({\n      name,\n      pokemonIndex,\n      frontImageUrl,\n      backImageUrl,\n      height,\n      weight,\n      url,\n      types,\n      abilities,\n      stats: {\n        hp,\n        attack,\n        defense,\n        speed,\n        specialAttack,\n        specialDefense,\n      },\n    });\n  }\n\n  render() {\n    const {\n      backImageUrl,\n      frontImageUrl,\n      pokemonIndex,\n      name,\n      description,\n      effect,\n      types,\n      height,\n      weight,\n      abilities,\n    } = this.state;\n\n    const {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense,\n    } = this.state.stats;\n\n    return (\n      <div className=\"col\">\n        <div className=\"pokemon-card\">\n          <div className=\"card-body bg-card\">\n            <div className=\"row\">\n              <div className=\"backImage\">\n                <img src={backImageUrl} alt=\"\" />\n              </div>\n              <div className=\"row align-items-center\">\n                <div className=\"col-md-6\">\n                  <Image\n                    className=\"rounded mx-auto d-block \"\n                    src={frontImageUrl}\n                  />\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"d-flex justify-content-between mainTitle\">\n                    <h1>{pokemonIndex}.</h1>\n                    <h1 className=\"color\">{name} </h1>\n                    <h1 className=\"hp\">{hp}HP</h1>\n                  </div>\n                  <div>\n                    <p>\n                      <span>Ability:</span>\n                      {description} {effect}\n                    </p>\n                  </div>\n                  <hr class=\"new4\"></hr>\n                  <Accordion>\n                    <CardMain>\n                      <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                        <h5>Skills:</h5>\n                      </Accordion.Toggle>\n                      <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body>\n                          <h6>Attack: {attack} </h6>\n                          <h6>Defense: {defense} </h6>\n                          <h6>Speed: {speed} </h6>\n                          <h6>Special attack: {specialAttack} </h6>\n                          <h6>Special defense: {specialDefense} </h6>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </CardMain>\n                    <CardMain>\n                      <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                        <h5>Parameters:</h5>\n                      </Accordion.Toggle>\n                      <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body>\n                          <h6>Type: {types}</h6>\n                          <h6>Height: {height}</h6>\n                          <h6>Weigth: {weight}</h6>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </CardMain>\n                    <CardMain>\n                      <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                        <h5>Extra:</h5>\n                      </Accordion.Toggle>\n                      <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body>\n                          {\" \"}\n                          <h6>{abilities}</h6>\n                        </Card.Body>\n                      </Accordion.Collapse>\n                    </CardMain>\n                  </Accordion>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pokemon;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from \"./components/NavBar\";\nimport Dashboard from \"./components/Transfer\";\nimport Pokemon from \"./components/pokemonFolder/Pokemon\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countPage: 0,\n      pokemons: [],\n    };\n    this.setOffset = this.setOffset.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getAllpokemonsForType(\"all\");\n  }\n\n  setType = (type) => {\n    this.getAllpokemonsForType(type);\n    let limit = this.refs.navBar.getLimit();\n    this.refs.dashboard.triggerChangePokemonsInChild(type, 0, limit);\n  };\n\n  setInput = (letterInput) => {\n    this.refs.dashboard.triggerChoseName(letterInput);\n  };\n\n  setLimit = (limit) => {\n    let type = this.refs.navBar.getType();\n    let offset = this.refs.navBar.getOffset();\n    this.refs.dashboard.triggerChangePokemonsInChild(type, offset, limit);\n  };\n\n  setOffset(offset) {\n    let type = this.refs.navBar.getType();\n    let limit = this.refs.navBar.getLimit();\n    this.refs.dashboard.triggerChangePokemonsInChild(type, offset, limit);\n  }\n\n  async getAllpokemonsForType(type) {\n    let res = null;\n    let countPage = 0;\n    let pokemons = [];\n\n    if (type === \"all\") {\n      res = await axios.get(\n        \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=10\"\n      );\n      countPage = res.data.count;\n      pokemons = res.data.results;\n      console.log(res.data.results);\n    } else {\n      res = await axios.get(type);\n      console.log(res.data.results);\n      countPage = res.data.pokemon.length;\n      pokemons = res.data.pokemon;\n    }\n\n    this.setState({\n      countPage: countPage,\n      pokemons: pokemons,\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App \">\n          <NavBar\n            ref=\"navBar\"\n            setType={this.setType}\n            setInput={this.setInput}\n            setLimit={this.setLimit}\n            setOffset={this.setOffset}\n            countPage={this.state.countPage}\n            pokemons={this.state.pokemons}\n          />\n          <div className=\"container\">\n            <Switch>\n              <Dashboard exact path=\"/\" ref=\"dashboard\" />\n              <Route exact path=\"/pokemon/:pokemonIndex\" component={Pokemon} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}